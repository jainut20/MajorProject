
0 to 2.0
this presentation will try to an. 
2.0 to 8.0
what are wild pointers are so let's get started why pointers are all. 
8.0 to 36.93
known as an initialised pointers let me tell you they are the pointers which are initialised ok so this point is usually point to some arbitrary memory location and may cause a program to crash of this behave with a point to some memory location which we even don't know right they definitely do not contain the address of some valid memory location right so it may cause a program to crash or miss behave for example here in this case this point there has not been initialised yet and hear it. 
36.93 to 76.17
dereference this pointer this means that we are trying to access the location pointed by this pointer and there are also storing this value within that location how is this may cause the program to crash it may even cause segmentation fault we are trying to write into the memory which is an illegal memory basically this pointer may contain the address of some illegal memory location so that is why this pointer is a wild pointer it while it behaves and may cause a program to cache miss behave so this is a void pointer without any doubt now how to avoid wild pointer what are the best practices to avoid wild point. 
76.17 to 96.7
the best practice is to initialise them with the address of unknown variable in this case you can clearly see that point to has been initialised with the address of this variable where it is clear that this will no more be a wild point it contains the address of a variable is no problem with this. 
96.7 to 135.27
that we should explicitly allocate the memory and put the values in the allocated memory in this example you can clearly see that we are advocating the memory using malloc this is also a legal step hair we are initialising this pointer with the address of the first bite of the memory allocated by this function and obviously we can access that location and put some values within them with this fine you should assign the address of some variable or some object or explicitly allocate the memory and put the values in the allocated memory these two steps of fine to avoid wild pointer friends this is a pronoun thank you for watching this presentation. 