7.766666666666667, 7.933333333333334
 PROGRAMMING AND
DATA|STRUCTURES
Data Types Vs Abstract Data Types





7.933333333333334, 96.73333333333333
 WHAT IS A DATA TYPE?
Two important things about data types:
1. Defines a certain domain of values.
2. Defines Operations allowed on those values.
EXAMPLE:
‘int type :
: -  Takls only integer values
Operations: addition, subtraction,
multiplication, bitwise operations etc.




96.73333333333333, 97.83333333333333
 USER DEFINED DATA TYPES
In contrast to primitive data types, there is a concept of user defined data
types.
The operations and valves of user defined data types are not specified in the
language itself but is specified by the user.
EXAMPLE: Structure, union and enuméation.
By using structures, we are defining our own type by combining other data
types.
struct point {
Int x;
int y;
33




97.83333333333333, 98.06666666666666
 ABSTRACT DATA TYPES (ADT)
AOTs are like user defined data types which defines operations on values
using functions without specifying what is there inside the function and how
the operations are performed.
ExAmpce: Stack ADT
A stack consists of elements of same type arranged in a sequential order.
Operations:
initialize() - initializing it to be empty
Push() - Insert an element into the stack ...................
Pop() - Delete an element from the stack : ONLY BLUEPRINT :
isEmpty() - checks if stack is empty Povororcoonouocuccd ;
got ore - checks if stack is full




98.06666666666666, 216.0
 ABSTRACT DATA TYPES (ADT)
Think of ADT as a black box which hides the inner structure and design of the
data type from the user.
[ ere are multiple ways to implement an AOT.
A stack AOT can be implemented using arrays or bist
 
EXAMPLE:

what is a user defined data type before moving on to obstruct the times we should understand what is the user defined data type in contrast to primitive data types there is a concept of user defined data types we already know primitive data types like integer to character float right but there is a concept of user Defined by which we should also know the operations and values of user defined data types or not specified in the language itself but is specified by the user if the user is defining the operations as well as the values it is not predefined in the language itself ok now here are the examples structure union and enumeration which we have already discussed by using structures dear defining our own type by combining other data types by using structures by defining a round type by combining other primitive types for example here in this case we have combined these two integers to form a new type that is point so it's a user defined data type this is our understanding about user defined and it's now let's try to understand what are abstract data types edit is or abstract data types are like user defined data types which defines operations on values using functions without specifying what is there inside the function and how the operations are performed first of all we are defining operations that is true but we are defining operations on values that is also true using functions it should be well noted that we are defining operations using functions without specifying what is there inside the function we are not specified anything inside what is there inside the function ok and how the operations are performed let's take an example of a stack editing a stack consists of elements of same type arranged in a sequential order so what type of elements are allowed in a stack the elements of same type and that to their arranged in the sequential order we already know that right


216.0, 258.73333333333335
 Wuy ADT?
The program which uses data structure is called a client program
It has access to the AOT i.e. interface.
The program which implerr
w

now the operations allowed on them could be initialised we can define initialise function which initialises the stack to be empty actually we can perform of push operation that is insert an element into the stack we can perform pop operation that is delete an element from the stack we can check is Tak empty all week and Jack is back full so these are the operations which we can define and we can perform on stack these are functions as you can see here we are specified functions but we are not saying anything how they can be implemented we are just specifying them that is called abstract data type we know that what type of elements are allowed and we also know that what operations we can perform but we don't know what is there inside


258.73333333333335, 310.96666666666664
 Wuy ADT?
The program which uses data structure is called a client program
It has access to the AOT i.e. interface.
The program which implements the data structure is known as the
implementation.
PND NN BY Nc) at
Let say, if someone wants to use the stack in the program, then he can simply
use push and pop operations without knowing its implementation.




310.96666666666664, 311.03333333333336
 Wuy ADT?
The program which uses data structure is called a client program
It has access to the AOT i.e. interface.
The program which implements the data structure is known as the
implementation.
PND NN BY Nc) at
Let say, if someone wants to use the stack in the program, then he can simply
use push and pop operations without knowing its implementation.
Also, if in future, the implementation of stack is changed from array to linked
list, then the client program will work in the same way without being affedted.




