 PROGRAMMING AND
DATA STRUCTURES
Understanding Wild Poinfgrs

 WHAT IS A WILD POINTER?
Wild pointers are also known as uninitialized pointers.
in

 NESO ACADEMY
How TO AVOID WILD POINTERS?
6

 How TO AVOID WILD pomreas?
2_ \) Explicifly allocate The memory and put the values in The allocated
memory.
ExAM|>L‘:':
int main()
{
int *p = (int *)ma11oc(sizeof(int));
*0 = 16;
free(p);
return 0;

 PROGRAMMING AND
DATA STRUCTURES
Understanding Wild Pointers
U

 WHAT IS A WILD POINTER?
Wild pointers are also known as uninitialized pointers.
o

 WHAT IS A WILD POINTER?
Wild pointers are also known as uninitialized pointers.
These pointers usually point to some arbitrary memory location and
may cause a program to crash or misbehave.
EXAMPLE:
int main()
{
int *p;
*p = 19;
return 0;

 How TO AVOID WILD POINTERS?
E) Initialize them with the address of a known variable.
EXAMPLE:
int main()
{
int var = 16;
int *p;
P = &V3f‘3 4 ' ' ' ' ' '  NO MORE A WILD POINTER
urn 6;

 I-low TO AVOID WILD POINTERS?
2_ \) Explicifly allocate The memory and put the values in The allocated
memory.
EXAMPLE:
int main()
{
int *p = (int *)mal1oc(sizeof(:i.nt));
*p = mi
free(p);
return 0;

 PROGRAMMING AND
DATA STRUCTURES
Understanding Wild Pointers
U

 PROGRAMMING AND
DATA STRUCTURES
Understanding Wild Pointers

 WHAT IS A WILD POINTER?
Wild pointers are also known as uninitialized pointers.
These pointers usually point to some arbitrary memory location and
may cause a program to crash or misbehave.
EXAMPLE:
int main()
{
int *p;
=« _ .
P - 19,
retur-rife;

 How TO AVOID WILD POINTERS?
E) Initialize them with the address of a known variable.
EXAMPLE:
int main()
{
int var = 16;
int *p;
p = &var‘;
return 0;
vb

 I-low TO AVOID WILD POINTERS?
2_ \) Explicifly allocate The memory and put the values in The allocated
memory.
EXAMPLE:
int main()
{
int *p = (int *)ma11oc(sizeof(int));
*p = 194‘
free(p);
return 0;

 PROGRAMMING AND
DATA STRUCTURES
Understanding Wild Poinferf.

 WHAT IS A WILD POINTER?
Wild pointers are also known as uninitialized pointers.
in

 WHAT IS A WILD POINTER?
Wild pointers are also known as uninitialized pointers.
These pointers usually point to some arbitrary memory location and
may cause a program To crash or misbehave.
EXAMPLE:
int main()
{ iv
int *p;,
*p = 18;
retur-n0;

 How TO AVOID WILD POINTERS?
E) Initialize them with the address of a known variable.
EXAMPLE:
int main()
{
int var = 16;
int *p;
P = &var‘; 4 ------ ~ No MORE A WILD POINTER
reviurn 0;

 I-low TO AVOID WILD POINTERS?
2_ \) Explicifly allocate The memory and put the values in The allocated
memory.
EXAMPLE:
int main()
{
int *p = (int *)ma11oc(sizeof(int));
*p = 194‘
free(p);
return 0;

 PROGRAMMING AND
DATA] STRUCTURES
Understanding Wild Pointers
v

 WHAT IS A WILD POINTER?
Wild pointers are also known as uninitialized pointers.
v

 WHAT IS A WILD POINTER?
Wild pointers are also known as uninitialized pointers.
These pointers usually point to some arbitrary memory location and
may cause a program to crash or misbehave.
EXAMPLE:
int main()
int *p;
il ee
return

 How TO AVOID WILD POINTERS?
(1.) Initialize them with the address of a known variable.
EXAMPLE:
int main()
int var = 10;
int *p;
p = &var;
return

 How TO AVOID WILD POINTERS?
2.) €xplicitly allocate the memory and put the values in the allocated
memory.
EXAMPLE:
int main()
int *p = (int *)malloc(sizeof(int));
*p = 10;
free(p);
return 

 PROGRAMMING AND
DATA STRUCTURES
Understanding Wild Poipfers

 WHAT IS A WILD POINTER?
Wild pointers are also known as uninitialized pointers.
in

 WHAT IS A WILD POINTER?
Wild pointers are also known as uninitialized pointers.
These pointers usually point to some arbitrary memory location and
may cause a program To crash or misbehave.
EXAMPLE:
int main()
{
int *p;,
*p = 18;
return 0;

 How TO AVOID WILD POINTERS?
2_ X Explicifly allocate The memory and put the values in The allocated
memory.
EXAMPLE:
int main()
{
int *p = (int *)ma11oc(sizeof(int));
*p = 1a; a
free(p);
return 0;

 PROGRAMMING AND
DATA STRUCTURES
Understanding Wild P9im‘ers

 WHAT IS A WILD POINTER?
Wild pointers are also known as uninitialized pointers.
in

 WHAT IS A WILD POINTER?
Wild pointers are also known as uninitialized pointers.
These pointers usually point to some arbitrary memory location and
may cause a program To crash or misbehave.
EXAMPLE:
int main()
{ iv
int *p;,
*p = 18;
retur-n0;

 How TO AVOID WILD POINTERS?
E) Initialize them with the address of a known variable.
EXAMPLE:
int main()
{
int var = 16;
int *p;
P = &var‘; 4 ------ ~ No MORE A WILD POINTER
reviurn 0;

 I-low TO AVOID WILD POINTERS?
2_ \) Explicifly allocate The memory and put the values in The allocated
memory.
EXAMPLE:
int main()
{
int *p = (int *)ma11oc(sizeof(int));
*p = 194‘
free(p);
return 0;

 PROGRAMMING AND
DATA STRUCTURES
Understanding Wild Pointers
U

 PROGRAMMING AND
DATA STRUCTURES
Understanding Wild Pointers

 WHAT IS A WILD POINTER?
Wild pointers are also known as uninitialized pointers.
These pointers usually point to some arbitrary memory location and
may cause a program to crash or misbehave.
EXAMPLE:
int main()
{
int *p;
*p = 19:
retur-n6;

 How TO AVOID WILD POINTERS?
E) Initialize them with the address of 0 known vgrioble.

 How TO AVOID WILD POINTERS?
2_ E Explicitly allocate the memory and put the values in the allocated
memory.
EXAMPLE:
int main()
{
int *p = (int *)ma11oc(sizeof(int));
*9 = 8;
free(p);
return 0;

 PROGRAMMING AND
DATA STRUCTURES
Understanding Wild Pointers
U

 PROGRAMMING AND
DATA STRUCTURES
Understanding Wild Pointers

 WHAT IS A WILD POINTER?
Wild pointers are also known as uninitialized pointers.
These pointers usually point to some arbitrary memory location and
may cause a program to crash or misbehave.
EXAMPLE:
int main()
{
int *p;
*p = 19;
return 0;

 I-low TO AVOID WILD POINTERS?
2_ \) Explicifly allocate The memory and put the values in the allocated
memory.
EXAMPLE:
int main()
{
int *p = (int *)ma11oc(sizeof(:i.nt));
*9 = 90;
free(p);
return 0;

 How TO AVOID WILD POINTERS?
2_ } Explicitly allocate the memory and put the values in the allocated
memory.
EXAMPLE
int main()
{
int *p = (int *)ma11oc(sizeof(int));
*9 = 16;
free(p)s
return 0;

 PROGRAMMING AND
DATA STRUCTURES
Understanding Wild Pointers
U

 PROGRAMMING AND
DATA STRUCTURES
Understanding Wild Pointers

 WHAT IS A WILD POINTER?
Wild pointers are also known as uninitialized pointers.
These pointers usually point to some arbitrary memory location and
may cause a program to crash or misbehave.
EXAMPLE:
int main()
{
int *p;
*p = 19;
return 0;

 I-low TO AVOID WILD POINTERS?
2_ \) Explicifly allocate The memory and put the values in the allocated
memory.
EXAMPLE:
int main()
{
int *p = (int *)mal1oc(sizeof(int));
*9 = *6;
free(p);
return 0;

 I-low TO AVOID wu.1> pomreas?
2_ \) Explicifly allocafe The memory and put the values in the allocated
memory.
EXAMPLE:
int main()
{
int *p = (int *)ma11oc(sizeof(int));
*9 = 16;
free(p);
return 0;

 PROGRAMMING AND
DATA STRUCTURES
Understanding Wild P9im‘ers

 WHAT IS A WILD POINTER?
Wild pointers are also known as uninitialized pointers.
These pointers usually point to some arbitrary memory location and
may cause a program to crash or misbehave.
EXAMPLE:
int main()
{
int *p;
*p = 19;
retur-n0;

 How TO AVOID WILD POINTERS?
E) Initialize them with the address of a known variable.
EXAMPLE:
int main()
{
int var = 16;
int *p;
P = &var‘; 4 ------ ~ No MORE A WILD POINTER
reviurn 0;

 I-low TO AVOID WILD POINTERS?
2_ \) Explicifly allocate The memory and put the values in The allocated
memory.
EXAMPLE:
int main()
{
int *p = (int *)ma11oc(sizeof(int));
*p = 194‘
free(p);
return 0;

 THANK YOU!
vb xv

 PROGRAMMING AND
DATA STRUCTURES
Understanding Wild Pointers
U

 PROGRAMMING AND
DATA STRUCTURES
Understanding Wild Pointers

 WHAT IS A WILD POINTER?
Wild pointers are also known as uninitialized poinfers.
These pointers usually point to some arbitrary memory location and
may cause a program To crash or misbehave.
J-

 WHAT IS A WILD POINTER?
Wild pointers are also known as uninitialized pointers.
These pointers usually point to some arbitrary memory location and
may cause a program To crash or misbehave.
EXAMPLE:
int main()
{
int *p;
*p =16;
return 0;

 How TO AVOID WILD POINTERS?
E) Initialize them with the address of 0 known variable.
EXAMPLE:
int main()
{
int var = 16;
int *1’;
p = &var‘;
return 6;

 I-low TO AVOID WILD POINTERS?
2_ \) Explicifly allocate The memory and put the values in The allocated
memory.
EXAMPLE:
int main()
{
int *p = (int *)mal1oc(sizeof(:i.nt));
*p = mi
free(p);
return 0;

