 PROGRAMMING AND
DATA] STRUCTURES
Understanding Wild Pointers
v

 WHAT IS A WILD POINTER?
Wild pointers are also known as uninitialized pointers.
These pointers usually point to some arbitrary memory location and
may cause a program to crash or misbehave.
EXAMPLE:
int main()
int *p;
v = 10;
eturn

 How TO AVOID WILD POINTERS?
(1.) Initialize them with the address of a known variable.
EXAMPLE:
int main()
int var = 10;
Pp = &var3 400+ No MORE A WILD POINTER

 How TO AVOID WILD POINTERS?
2.) €xplicitly allocate the memory and put the values in the allocated
memory.
EXAMPLE:
int main()
int *p = (int *)malloc(sizeof(int));
*p = 10;
free(p);
return 

 How TO AVOID WILD POINTERS?
2.) €xplicitly allocate the memory and put the values in the allocqted
memory.
EXAMPLE:
int main()
int *p = (int *)malloc(sizeof(int));
*p = 10;
free(p);
return 

 PROGRAMMING AND
DATA]STRUCTURES
Understanding Wild Pointers

 WHAT IS A WILD POINTER?
Wild pointers are also known as uninitialized pointers.
v

 WHAT IS A WILD POINTER?
Wild pointers are also known as uninitialized pointers.
These pointers usually point to some arbitrary memory location and
may cause a program to crash or misbehave.
EXAMPLE:
int main()
int *p;
*p = 40;
return

 How TO AVOID WILD POINTERS?
(4.) Initialize them with the addr:


 How TO AVOID WILD POINTERS?
2.) Explicitly allocate the memory and put the values in the allocated
memory.
EXAMPLE:
int main()
int *p = (int *)malloc(sizeof(int));
*p = 10;
free(p);
return 

 How TO AVOID WILD POINTERS?
2.) €xplicitly allocate the memory and put the values in the allocated
memory.
EXAMPLE:
int main()
int *p = (int *)malloc(sizeof(int));
*p = 10;
free(p);
return 

 PROGRAMMING AND
DATA] STRUCTURES
Understanding Wild Pointers
v

 PROGRAMMING AND
DATA|STRUCTURES
Understanding Wild Pointers

 WHAT IS A WILD POINTER?
Wild pointers are also known as uninitialized pointers.
These pointers usually point to some arbitrary memory location and
may cause a program to crash or misbehave.
EXAMPLE:
int main()
int *p;
*p = 10;
p = 10;
returra;

 How TO AVOID WILD POINTERS?
(1.) Initialize them with the address of a known variable.
EXAMPLE:
int main()
int var = 10;
int +o,
p = &var;
return

 How TO AVOID WILD POINTERS?
2.) €xplicitly allocate the memory and put the values in the allocated
memory.
EXAMPLE:
int main()
int *p = (int *)malloc(sizeof(int));
*p = 105
free(p);
return 

 PROGRAMMING AND
DATA]STRUCTURES
Understanding Wild Pointers

 WHAT IS A WILD POINTER?
Wild pointers are also known as uninitialized pointers.
v

 WHAT IS A WILD POINTER?
Wild pointers are also known as uninitialized pointers.
These pointers usually point to some arbitrary memory location and
may cause a program to crash or misbehave.
EXAMPLE:
int main()
int *p;
*p = 40;
return

 How TO AVOID WILD POINTERS?
(4.) Initialize them with the addr:


 How TO AVOID WILD POINTERS?
2.) Explicitly allocate the memory and put the values in the allocated
memory.
EXAMPLE:
int main()
int *p = (int *)malloc(sizeof(int));
*p = 99;
free(p);
return 

 PROGRAMMING AND
DATA] STRUCTURES
Understanding Wild Pointers
v

 PROGRAMMING AND
DATA|STRUCTURES
Understanding Wild Pointers

 WHAT IS A WILD POINTER?
Wild pointers are also known as uninitialized pointers.
These pointers usually point to some arbitrary memory location and
may cause a program to crash or misbehave.
EXAMPLE:
int main()
int *p;
*p = 9
return

 How TO AVOID WILD POINTERS?
2. ) Explicitly allocate the memory and put the values in the allocated
memory.
EXAMPLE:
int main()
int *p = (int *)malloc(sizeof(int));
Ta) S 123 wv
free(p);
return 

 How TO AVOID WILD POINTERS?
2.) Explicitly allocate the memory and put the values in the allocated
memory.
EXAMPLE:
int main()
int *p = (int *)malloc(sizeof(int));
*p = 10;
free(p);
return 

 PROGRAMMING AND
DATA|STRUCTURES
UTaYo(=Tacarolael{avemaulie! Pointers

 WHAT IS A WILD POINTER?
Wild pointers are also known as uninitialized pointers.
v

 WHAT IS A WILD POINTER?
Wild pointers are also known as uninitialized pointers.
These pointers usually point to some arbitrary memory location and
may cause a program to crash or misbehave.
EXAMPLE:
int main()
int *p;
*p = 993
return

 How TO AVOID WILD POINTERS?
2. ) Explicitly allocate the memory and put the values in the allocated
memory.
EXAMPLE:
int main()
int *p = (int *)malloc(sizeof(int));
a) = 13 wv
free(p);
return 

 PROGRAMMING AND
DATA]STRUCTURES
Understanding Wild Pointers

 WHAT IS A WILD POINTER?
Wild pointers are also known as uninitialized pointers.
v

 WHAT IS A WILD POINTER?
Wild pointers are also known as uninitialized pointers.
These pointers usually point to some arbitrary memory location and
may cause a program to crash or misbehave.


 WHAT IS A WILD POINTER?
Wild pointers are also known as uninitialized pointers.
These pointers usually point to some arbitrary memory location and
may cause a program to crash or misbehave.
EXAMPLE:
int main()
int *p;
*p = WO;
return

 How TO AVOID WILD POINTERS?
2.) €xplicitly allocate the memory and put the values in the allocated
memory.
EXAMPLE:
int main()
int *p = (int *)malloc(sizeof(int));
*p = ;
free(p);
return 

 PROGRAMMING AND
DATA]STRUCTURES
Understanding Wild Pointers

 WHAT IS A WILD POINTER?
Wild pointers are also known as uninitialized pointers.
v

 WHAT IS A WILD POINTER?
Wild pointers are also known as uninitialized pointers.
These pointers usually point to some arbitrary memory location and
may cause a program to crash or misbehave.
EXAMPLE:
int main()
int *p;
*p = 993
return

 How TO AVOID WILD POINTERS?
(1.) Initialize them with the address of a known variable.
EXAMPLE:
int main()
int var = 10;
Pp = &var3 40--e- No MORE A WILD POINTER

 How TO AVOID WILD POINTERS?
2. ) Explicitly allocate the memory and put the values in the allocated
memory.
EXAMPLE:
int main()
int *p = (int *)malloc(sizeof(int));
*p = 10;
free(p);
return 

 PROGRAMMING AND
DATA]STRUCTURES
Understanding Wild Pointers

 WHAT IS A WILD POINTER?
Wild pointers are also known as uninitialized pointers.
These pointers usually point to some arbitrary memory location and
may cause a program to crash or misbehave.
EXAMPLE:
int main()
int *p;
*p = 10;
return

 How TO AVOID WILD POINTERS?
(1.) Initialize them with the address of a known variable.
EXAMPLE:
int main()
int var = 10;
Pp = &var3 400+ No MORE A WILD POINTER

 How TO AVOID WILD POINTERS?
2. ) Explicitly allocate the memory and put the values in the allocated
memory.
EXAMPLE:
int main()
int *p = (int *)malloc(sizeof(int));
*p = 10;
free(p);
return 

 PROGRAMMING AND
DATA]STRUCTURES
Understanding Wild Pointers

 WHAT IS A WILD POINTER?
Wild pointers are also known as uninitialized pointers.
These pointers usually point to some arbitrary memory location and
may cause a program to crash or misbehave.
EXAMPLE: 
int main()
int *p;
il ee
return®

 How TO AVOID WILD POINTERS?
(4.) Initialize them with the address of a known variable.
EXAMPLE:
int main()
int var = 10;
int :
p = &var;
return

 How TO AVOID WILD POINTERS?
2.) Explicitly allocate the memory and put the values in the fol Keefe cre!
memory.
EXAMPLE:
int main()
int *p = (int *)malloc(sizeof(int));
*p = 10;
free(p);
return 

 How TO AVOID WILD POINTERS?
2.) €xplicitly allocate the memory and put the values in the allocated
memory.
EXAMPLE:
int main()
int *p = (int *)malloc(sizeof(int));
*p = 105
free(p);
return 

 How TO AVOID WILD POINTERS?
2. ) Explicitly allocate the memory and put the values in the allocated
memory.
Examp t:
int main()
int *p = (int *)malloc(sizeof(int));
*p = 10;
free(p);
return 

 PROGRAMMING AND
DATA]STRUCTURES
Understanding Wild Pointers

 WHAT IS A WILD POINTER?
Wild pointers are also known as uninitialized pointers.
These pointers usually point to some arbitrary memory location and
may cause a program to crash or misbehave.
EXAMPLE: w
int main()
int *p;
il ee
return®

 How TO AVOID WILD POINTERS?
2. ) Explicitly allocate the memory and put the values in the allocated
memory.
EXAMPLE:
int main()
int *p = (int *)malloc(sizeof(int));
a) = 13 v
free(p);
return 

 PROGRAMMING AND
DATA STRUCTURES
Understanding Wild Pointers
U

 WHAT IS A WILD POINTER?
Wild pointers are also known as uninitialized pointers.
These pointers usually point to some arbitrary memory location and
may cause a program to crash or misbehave.
EXAMPLE:
int main()
{
int *p;
3? = 18;
eturne;

 How TO AVOID WILD POINTERS?
E) Initialize them with the address of 0 known vgrioble.

 How TO AVOID WILD POINTERS?
E) Initialize them with the address of 0 known variable.
EXAMPLE:
int main()
{
int var = 16;
int *p;
p = &var‘; 4 ------ ~ No MORE A WILD POINTER
returwbe;

 I-low TO AVOID WILD POINTERS?
2_ \) Explicifly allocofe The memory and put the values in The allocated
memory.
EXAMPLE:
int main()
{
int *p = (int *)ma11oc(sizeof(int));
*p = 194‘
free(p);
return 0;

